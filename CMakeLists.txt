cmake_minimum_required(VERSION 2.8.7)

project(Project3)

include(CheckCXXCompilerFlag)
set(CMAKE_BUILD_TYPE Debug)
CHECK_CXX_COMPILER_FLAG("-std=c++17" COMPILER_SUPPORTS_CXX17)
CHECK_CXX_COMPILER_FLAG("-std=c++14" COMPILER_SUPPORTS_CXX14)
CHECK_CXX_COMPILER_FLAG("-std=c++11" COMPILER_SUPPORTS_CXX11)
CHECK_CXX_COMPILER_FLAG("-std=c++0x" COMPILER_SUPPORTS_CXX0X)

if(COMPILER_SUPPORTS_CXX17)
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++17")
elseif(COMPILER_SUPPORTS_CXX14)
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++14")
elseif(COMPILER_SUPPORTS_CXX11)
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
elseif(COMPILER_SUPPORTS_CXX0X)
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++0x")
else()
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
#  message(FATAL_ERROR "The compiler ${CMAKE_CXX_COMPILER} doesn't support c++11, cannot compile project")
endif()

if(APPLE)
#  set(GLEW_LIBRARIES "GLEW::glew")
else()
  set(CMAKE_PREFIX_PATH "${CMAKE_CURRENT_SOURCE_DIR}/glew-1.13.0")
  set(CMAKE_LIBRARY_PATH "${CMAKE_CURRENT_SOURCE_DIR}/glew-1.13.0/lib/Release/x64/")
  set(BOOST_ROOT "${CMAKE_CURRENT_SOURCE_DIR}/boost_1_70_0")
  set(ENV{SDL2DIR} "${CMAKE_CURRENT_SOURCE_DIR}/SDL2")
endif()
add_subdirectory(Project3)